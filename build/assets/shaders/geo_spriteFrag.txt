#version 430 core
 
uniform sampler2D textures[8];
uniform mat4 position;

layout (location = 0) in vec2 uv;
layout (location = 1) in vec4 color;
in float textureId;




out vec4 outColor;

void main()
{
	vec4 texColor = vec4(1.0, 1.0, textureId / 10.0, 1.0);

    position;

	// if (textureId > 0.0)
	//{

		int tid = int(textureId - 0.5);

		if (tid == 0)
			texColor = texture2D(textures[0], uv);
		else if (tid == 1)
			texColor = texture2D(textures[1], uv);
		else if (tid == 2)
			texColor = texture2D(textures[2], uv);
		else if (tid == 3)
			texColor = texture2D(textures[3], uv);
		else if (tid == 4)
			texColor = texture2D(textures[4], uv);
		else if (tid == 5)
			texColor = texture2D(textures[5], uv);
		else if (tid == 6)
			texColor = texture2D(textures[6], uv);
		else if (tid == 7)
			texColor = texture2D(textures[7], uv);
	//	}
		
//	texColor = texture2D(textures[0], uv);
	outColor = texColor * color;
	
	// outColor = vec4(0, 0, 0, 1.0);
	//		gl_FragColor = c1 * (1.0 - intensity * 2.0) + color2 * intensity * 2.0;
}
